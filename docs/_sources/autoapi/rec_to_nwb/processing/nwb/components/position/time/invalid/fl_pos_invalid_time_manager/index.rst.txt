:mod:`rec_to_nwb.processing.nwb.components.position.time.invalid.fl_pos_invalid_time_manager`
=============================================================================================

.. py:module:: rec_to_nwb.processing.nwb.components.position.time.invalid.fl_pos_invalid_time_manager


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rec_to_nwb.processing.nwb.components.position.time.invalid.fl_pos_invalid_time_manager.FlPosInvalidTimeManager



.. py:class:: FlPosInvalidTimeManager(metadata: dict)

   " Manage POS data and call FLPosInvalidTimeBuilder to create list of FLPosInvalidTime objects.

   :param metadata: Project metadata
   :type metadata: dict

   .. method:: get_fl_pos_invalid_times()

      
      

   .. method:: get_fl_pos_invalid_times(self, nwb_content: NWBFile, gaps_margin: float = 1e-06)


      Manage POS data and call FlPosInvalidTimeBuilder for every invalid gap.

      :param nwb_content: NWBFile object with MDA timestamps inside
      :type nwb_content: NWBFile
      :param gaps_margin: Error margin for invalid gaps
      :type gaps_margin: float

      :raises MissingDataException: If timestamps are empty

      :returns: list of FlPosInvalidTime objects


   .. method:: __get_pos_timestamps(nwb_content)
      :staticmethod:



   .. method:: __calculate_pos_period(timestamps)
      :staticmethod:



   .. method:: __get_pos_invalid_times(self, timestamps, period, gaps_margin)



   .. method:: __get_pos_valid_times(self, timestamps, period, gaps_margin)



   .. method:: __build_pos_invalid_times(invalid_times)
      :staticmethod:




