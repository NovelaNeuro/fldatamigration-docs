:mod:`rec_to_nwb.processing.nwb.components.iterator.multi_thread_data_iterator`
===============================================================================

.. py:module:: rec_to_nwb.processing.nwb.components.iterator.multi_thread_data_iterator


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rec_to_nwb.processing.nwb.components.iterator.multi_thread_data_iterator.MultiThreadDataIterator



.. py:class:: MultiThreadDataIterator(data, number_of_threads=6)

   Bases: :class:`rec_to_nwb.processing.nwb.components.iterator.data_iterator.DataIterator`

   Abstract iterator class used to iterate over DataChunks.

   Derived classes must ensure that all abstract methods and abstract properties are implemented, in
   particular, dtype, maxshape, __iter__, ___next__, recommended_chunk_shape, and recommended_data_shape.

   .. attribute:: next
      

      

   .. method:: __next__(self)


      Return the next data chunk or raise a StopIteration exception if all chunks have been retrieved.

      HINT: numpy.s\_ provides a convenient way to generate index tuples using standard array slicing. This
      is often useful to define the DataChunk.selection of the current chunk

      :returns: DataChunk object with the data and selection of the current chunk
      :rtype: DataChunk


   .. method:: get_data_from_file(data, current_dataset, current_file)
      :staticmethod:




